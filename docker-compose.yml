version: "3.7"

services:
  create_certs:
    container_name: create_certs
    image: docker.elastic.co/elasticsearch/elasticsearch:$VERSION
    command: >
      bash -c '
        if [[ ! -f ./config/certificates/elastic-certificates.p12 ]]; then
          bin/elasticsearch-certutil cert -out config/certificates/elastic-certificates.p12 -pass ""
        fi;
        chown -R 1000:0 /usr/share/elasticsearch/config/certificates
      '
    user: "0"
    working_dir: /usr/share/elasticsearch
    volumes: ["certs:/usr/share/elasticsearch/config/certificates"]

  es01:
    container_name: es01
    depends_on: [create_certs]
    image: docker.elastic.co/elasticsearch/elasticsearch:$VERSION
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=$ELASTICSEARCH_PASSWORD
      - xpack.security.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.keystore.path=/usr/share/elasticsearch/config/certificates/elastic-certificates.p12
      - xpack.security.transport.ssl.truststore.path=/usr/share/elasticsearch/config/certificates/elastic-certificates.p12
    volumes:
      [
        "esdata:/usr/share/elasticsearch/data",
        "certs:/usr/share/elasticsearch/config/certificates",
        "logs:/var/log",
      ]
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          cpus: "1"
          memory: 256M
        reservations:
          cpus: "1"
          memory: 1G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
    ports:
      - "9200:9200"
    healthcheck:
      test: curl --cacert $CERTS_DIR/elastic-certificates.p12 -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - insylva-net

  kib01:
    container_name: kib01
    depends_on: [es01]
    image: docker.elastic.co/kibana/kibana:$VERSION
    environment:
      - SERVER_HOST=0.0.0.0
      - ELASTICSEARCH_URL=http://es01:9200
      - ELASTICSEARCH_HOSTS=http://es01:9200
      - ELASTICSEARCH_USERNAME=$ELASTICSEARCH_USERNAME
      - ELASTICSEARCH_PASSWORD=$ELASTICSEARCH_PASSWORD
    volumes:
      - type: volume
        source: logs
        target: /var/log
    ports:
      - "5601:5601"
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          cpus: "1"
          memory: 256M
        reservations:
          cpus: "1"
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
        window: 120s
    restart: unless-stopped
    networks:
      - insylva-net

  consul:
    image: consul:latest
    container_name: in-sylva-consul
    environment:
      network.host: 0.0.0.0
      # CONSUL_BIND_INTERFACE: eth0
      CONSUL_LOCAL_CONFIG: '{"connect": {"enabled": true}}'
    networks:
      - insylva-net
    ports:
      - "8300:8300"
      - "8301:8301"
      - "8301:8301/udp"
      - "8500:8500"
      - "8600:8600"
      - "8600:8600/udp"

  postgres:
    image: in-sylva.postgres:latest
    container_name: in-sylva.postgres
    volumes:
      - ./data.sql:/docker-entrypoint-initdb.d/data.sql:z
      - postgres_data:/var/lib/postgresql:z
    environment:
      POSTGRES_MULTIPLE_DATABASES: insylva,keycloak
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_HOST: postgres
    ports:
      - 5432:5432
    networks:
      - insylva-net
    restart: unless-stopped

  keycloak:
    image: in-sylva.keycloak:latest
    container_name: in-sylva.keycloak
    environment:
      network.host: 0.0.0.0

      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_PORT: 5432
      DB_DATABASE: keycloak

      DB_USER: $DB_USER
      DB_SCHEMA: $DB_SCHEMA
      DB_PASSWORD: $DB_PASSWORD

      KEYCLOAK_USER: $KEYCLOAK_USER
      KEYCLOAK_PASSWORD: $KEYCLOAK_PASSWORD
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      # JDBC_PARAMS: useSSL=false
      # JGROUPS_DISCOVERY_PROTOCOL: JDBC_PING
      # JGROUPS_DISCOVERY_PROPERTIES: datasource_jndi_name=java:jboss/datasources/KeycloakDS,info_writer_sleep_time=500,initialize_sql="CREATE TABLE IF NOT EXISTS JGROUPSPING ( own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created timestamp default current_timestamp, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))"
    ports:
      - 7000:8080
    depends_on:
      - postgres
    networks:
      - insylva-net
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    depends_on: [postgres]
    environment:
      PGADMIN_DEFAULT_EMAIL: $PGADMIN_DEFAULT_EMAIL
      PGADMIN_DEFAULT_PASSWORD: $PGADMIN_DEFAULT_PASSWORD
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - insylva-net
    restart: unless-stopped

  mongo:
    image: mongo:latest
    container_name: in-sylva.mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_INITDB_ROOT_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_INITDB_ROOT_PASSWORD
      MONGO_INITDB_DATABASE: insylva
    ports:
      - 27017:27017
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - insylva-net
    restart: unless-stopped

  mongo-express:
    image: mongo-express
    ports:
      - 8881:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: $ME_CONFIG_MONGODB_ADMINUSERNAME
      ME_CONFIG_MONGODB_ADMINPASSWORD: $ME_CONFIG_MONGODB_ADMINPASSWORD
    networks:
      - insylva-net
    restart: unless-stopped

  search-api:
    image: in-sylva.search.api:latest
    depends_on: [es01]
    container_name: in-sylva.search.api
    ports:
      - 9001:9001
    environment:
      PORT: 9001
      network.host: 0.0.0.0
      NODE_ENV: production

      DB_HOST: in-sylva.postgres
      DB_USERNAME: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_DATABASE: insylva
      DB_PORT: 5432

      ELK_HOST: es01
      ELK_PORT: 9200
      ELK_USERNAME: $ELASTICSEARCH_USERNAME
      ELK_PASSWORD: $ELASTICSEARCH_PASSWORD

      KEYCLOAK_REALM: in-sylva
      KEYCLOAK_SERVER_URL: http://keycloak:7000/keycloak/auth
      KEYCLOAK_CLIENT_ID: in-sylva.user.app
    links:
      - postgres
      - keycloak
      - es01
    networks:
      - insylva-net
    restart: unless-stopped

  gatekeeper:
    image: in-sylva.gatekeeper:latest
    container_name: in-sylva.gatekeeper
    ports:
      - 4000:4000
    environment:
      # network.host: 0.0.0.0
      PROCESS_TYPE: web
      NODE_ENV: production
      PORT: 4000

      DB_HOST: in-sylva.postgres
      DB_PORT: 5432
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_DATABASE: insylva

      IN_SYLVA_KEYCLOAK_HOST: http://keycloak
      IN_SYLVA_KEYCLOAK_PORT: 8080

      KEYCLOAK_USERNAME: $KEYCLOAK_USER
      KEYCLOAK_PASSWORD: $KEYCLOAK_PASSWORD
      KEYCLOAK_GRANT_TYPE: password
      KEYCLOAK_CLIENT_ID: admin-cli

      CONSUL_IP: http://in-sylva-consul
      CONSUL_PORT: 8500

      SERVICE_IP: http://gatekeeper
      SERVICE_PORT: 4000
      SERVICE_NAME: in-sylva-gatekeeper-v1

      KEYCLOAK_REALM: $KEYCLOAK_REALM
      KEYCLOAK_SERVER_URL: $KEYCLOAK_SERVER_URL
      KEYCLOAK_SERVER_PUBLIC_KEY: $KEYCLOAK_SERVER_PUBLIC_KEY
      KEYCLOAK_CREDENTIALS_SECRET: $KEYCLOAK_CREDENTIALS_SECRET

      IN_SYLVA_reCAPTCHA_SECRET_KEY: $IN_SYLVA_reCAPTCHA_SECRET_KEY

      IN_SYLVA_EMAIL: $IN_SYLVA_EMAIL
      IN_SYLVA_EMAIL_PASSWORD: $IN_SYLVA_EMAIL_PASSWORD
      IN_SYLVA_SMTP_HOST: $IN_SYLVA_SMTP_HOST
      IN_SYLVA_SMTP_PORT: $IN_SYLVA_SMTP_PORT
      IN_SYLVA_SMTP_SECURE: $IN_SYLVA_SMTP_SECURE
      IN_SYLVA_EMAIL_TO: $IN_SYLVA_EMAIL_TO
      IN_SYLVA_EMAIL_FROM: $IN_SYLVA_EMAIL_FROM

      IN_SYLVA_ADMIN_USERNAME: $IN_SYLVA_ADMIN_USERNAME
      IN_SYLVA_ADMIN_PASSWORD: $IN_SYLVA_ADMIN_PASSWORD
    networks:
      - insylva-net
    restart: unless-stopped

  source-manager:
    image: in-sylva.source.manager:latest
    container_name: in-sylva.source.manager
    environment:
      network.host: 0.0.0.0
      PROCESS_TYPE: web
      PORT: 5000

      BOT_SERVICE_TOKEN: $BOT_SERVICE_TOKEN
      BOT_SERVICE_CHANNEL: $BOT_SERVICE_CHANNEL

      IN_SYLVA_GATEKEEPER_HOST: http://in-sylva.gatekeeper
      IN_SYLVA_GATEKEEPER_PORT: 4000

      MONGO_HOST: mongo
      MONGO_USERNAME: $MONGO_USERNAME
      MONGO_PASSWORD: $MONGO_PASSWORD
      MONGO_DB_NAME: insylva
      MONGO_PORT: 27017

      DB_HOST: postgres
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_DATABASE: insylva
      DB_PORT: 5432

      ELK_HOST: es01
      ELK_PORT: 9200
      ELK_USERNAME: $ELASTICSEARCH_USERNAME
      ELK_PASSWORD: $ELASTICSEARCH_PASSWORD

      KEYCLOAK_USERNAME: $KEYCLOAK_USER
      KEYCLOAK_PASSWORD: $KEYCLOAK_PASSWORD
      KEYCLOAK_GRANT_TYPE: password
      KEYCLOAK_CLIENT_ID: admin-cli

      KEYCLOAK_REALM: $KEYCLOAK_REALM
      KEYCLOAK_SERVER_URL: $KEYCLOAK_SERVER_URL
      KEYCLOAK_SERVER_PUBLIC_KEY: $KEYCLOAK_SERVER_PUBLIC_KEY
      KEYCLOAK_CREDENTIALS_SECRET: $KEYCLOAK_CREDENTIALS_SECRET

      CONSUL_IP: in-sylva-consul
      CONSUL_PORT: 8500

      SERVICE_IP: source-manager
      SERVICE_PORT: 5000
      SERVICE_NAME: in-sylva-source-manager-v1
    ports:
      - 5000:5000
    links:
      - mongo
      - postgres
      - keycloak
      - es01
    networks:
      - insylva-net
    restart: unless-stopped

  portal:
    image: in-sylva.portal:latest
    container_name: in-sylva.portal
    ports:
      - 3000:3000
    links:
      - gatekeeper
      - keycloak
      - source-manager
    networks:
      - insylva-net
    restart: unless-stopped

  login:
    image: in-sylva.user.login:latest
    container_name: in-sylva.user.login
    environment:
      network.host: 0.0.0.0
      IN_SYLVA_GATEKEEPER_HOST: http://gatekeeper
      IN_SYLVA_GATEKEEPER_PORT: 4000
      IN_SYLVA_KEYCLOAK_HOST: http://keycloak
      IN_SYLVA_KEYCLOAK_PORT: 8080
      IN_SYLVA_SEARCH_HOST: http://search
      IN_SYLVA_SEARCH_PORT: 3001
      IN_SYLVA_PORTAL_HOST: http://portal
      IN_SYLVA_PORTAL_PORT: 3000
      IN_SYLVA_CLIENT_ID: "in-sylva.user.app"
      IN_SYLVA_GRANT_TYPE: "password"
      IN_SYLVA_REALM: "in-sylva"
    links:
      - gatekeeper
      - keycloak
    networks:
      - insylva-net
    restart: unless-stopped

  login-server: 
    image: in-sylva.login-server:latest
    container_name: in-sylva.login-server
    depends_on: [login,gatekeeper,keycloak]
    ports:
      - 8081:8081
    networks:
      - insylva-net
    restart: unless-stopped

  search:
    image: in-sylva.search:latest
    container_name: in-sylva.search
    environment:
      network.host: 0.0.0.0
    ports:
      - 3001:3001
    links:
      - gatekeeper
      - keycloak
      - source-manager
      - search-api
    networks:
      - insylva-net
    restart: unless-stopped

  portainer:
    container_name: in-sylva.portainer
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    restart: unless-stopped
    ports:
      - 9000:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  doc:
    container_name: in-sylva.doc
    image: in-sylva.doc:latest
    restart: unless-stopped
    volumes:
      - ./docs:/app/docs
      - ./doc/website/blog:/app/website/blog
      - ./doc/website/core:/app/website/core
      - ./doc/website/i18n:/app/website/i18n
      - ./doc/website/pages:/app/website/pages
    ports:
      - 3004:3000
      - 35729:35729

volumes:
  postgres_data:
  pgadmin:
  esdata:
  certs:
  portainer_data:
  logs:

networks:
  insylva-net:
    driver: bridge
    name: global-insylva-net
